golang数据类型

1.布尔型(bool) 类型的值是true和false，可以是常量, var b = true
2.数字类型(int)，和浮点型float32、float64,GO支持整形和浮点数字型，并且支持复数，其中位的运算采用补码
3.字符串类型，Go的字符串是由单个字节连起来的，Go语言的字符串的字节使用UTF-8编码标识Unicode文本。
4.派生类型，包括指针类型(pointer)、数组类型(array)、结构化类型(struct)、channel类型、函数类型、切片类型、接口类型(interface)、map类型

数字类型
uint8  无符号8位整型(0到255)
uint16 无符号16位整型(0到65535)
uint32 无符号32位整型(0到4294967295)
unit64 无符号64位整型(0到18446744073709551615)
int8   有符号8位整型(-128到127)
int16  有符号16位整型(-32768到32767)
int32  有符号32位整型(-2147483648到2147483647)
int64  有符号64位整型(-9223372036854775808到9223372036854775807)

浮点型
float32 IEEE-754 32位浮点型数
float64 IEEE-754 64位浮点型数
complex64  32位实数和虚数
complex128 64位实数和虚数

其他数字类型
byte    类似uint8
rune    类似int32
uint32  或64位
int     与uint 一样大小
uintptr 无符号整型，用于存放一个指针

golang类型定义
类型定义的语法
type newType type

go语言类型定义和类型别名的区别
类型定义相当于定义了一个全新的类型，与之前的类型不同；但是类型别名没有定义一个新的类型，而是用一个别名来替换之前的类型
类型别名只会在代码中存在，在编译完之后并不会存在该别名
因为类型别名和原来类型是一致的，所以原来类型所拥有的方法，类型别名中也可以调用，但是如果是重新定义一个类型，那么不可以调用之前的任何方法


